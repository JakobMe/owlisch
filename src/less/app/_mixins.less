/*
 * Modul: Mixins.
 * Definiert globale LESS-Mixins.
 * @author Jakob Metzger <jakob.me@gmail.com>
 * @copyright 2016 Jakob Metzger
 * @licence https://opensource.org/licenses/MIT MIT
 * @link http://jmportfolio.de
 */
 
// Font-Mixins
.font-main() { font-family: @app-font-name, sans-serif; }
.font-icon() { font-family: @fontello-font-name, sans-serif; }

// After-Block
.after-block() {
    display: block;
    content: "";
}

// Fontello-Icon
.fontello-icon(@icon) {
    &:after {
        content: @icon;
        .font-icon();
    }
}

// Ellipse
.ellipsis() {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

// Silbentrennung
.hyphens(@type: auto) {
    hyphens: @type;
}

// Transition
.transition(@type: all, @time: @app-time-animation, @delay: @app-time-delay) {
    transition: @type @time ease @delay;
}

// Translate
.translate(@x: 0, @y: 0, @z: 0) {
    transform: translate3d(@x, @y, @z);
}

// Border-Box
.borderbox() {
    box-sizing: border-box;
}

// Textschatten
.textshadow(@color: @app-color-black, @fade: 10%) {
    text-shadow: 0 @app-size-line-thin 0 fade(@color, @fade);
}

// Textschatten: Glühen
.textshadow-glow(@color) {
    text-shadow: 0 0 @app-size-padding @color;
}

// Schatten
.shadow(@x, @y, @blur, @spread, @color) {
    box-shadow: @x @y @blur @spread @color;
}

// Schatten Innen
.shadow-inner(@x, @y, @blur, @spread, @color) {
    box-shadow: inset @x @y @blur @spread @color;
}

// Schatten: Linie
.shadow-line(@y, @color) {
    .shadow(0, @y, 0, 0, @color);
}

// Schatten: Button
.shadow-button() {
    .shadow(0, @app-size-line-medium, @app-size-line-medium, 0, darken(@app-color-background, 3%));
}

// Schatten: Button Stark
.shadow-button-strong() {
    .shadow(0, @app-size-line-bold, @app-size-line-bold, 0, darken(@app-color-background, 8%));
}

// Schatten: Ergebnis
.shadow-result() {
    .shadow(0, @app-size-line-medium, @app-size-line-medium, 0, fade(@app-color-black, 15%));
}

// Schatten: Groß
.shadow-big() {
    .shadow(0, @app-size-margin-half, @app-size-margin, 0, fade(@app-color-black, 15%));
}

// Schatten: Ohne
.shadow-none() {
    box-shadow: none;
}

// Abgerundete Ecken
.round(@tl, @tr, @br, @bl) {
    border-radius: @tl @tr @br @bl;
}

// Abgerundete Ecken: Überall
.round-all(@radius: @app-size-radius) {
    .round(@radius, @radius, @radius, @radius);
}

// Abgerundete Ecken: Links
.round-left(@radius: @app-size-radius) {
    .round(@radius, 0, 0, @radius);
}

// Abgerundete Ecken: Rechts
.round-right(@radius: @app-size-radius) {
    .round(0, @radius, @radius, 0);
}

// Abgerundete Ecken: Oben
.round-top(@radius: @app-size-radius) {
    .round(@radius, @radius, 0, 0);
}

// Abgerundete Ecken: Unten
.round-bottom(@radius: @app-size-radius) {
    .round(0, 0, @radius, @radius);
}

// Rahmen Action-Button
.border-button-action() {
    border: @app-size-line-thin solid darken(@app-color-main, @app-darken-border);
    border-bottom-color: darken(@app-color-main, @app-darken-border-main);
}

// Rahmen Auswahl-Button
.border-button-choice() {
    border: @app-size-line-thin solid darken(@app-color-background, @app-darken-border);
    border-bottom-color: darken(@app-color-background, @app-darken-border-background);
}

// Verlauf Horizontal
.gradient-horizontal(@color-left, @color-right, @pos-left: 0%, @pos-right: 100%) {
    background-repeat: repeat-y;
    background-position: right top;
    background-image: linear-gradient(to right, @color-left @pos-left, @color-right @pos-right);
    background-color: @color-left;
}

// Verlauf Vertikal
.gradient-vertical(@color-top, @color-bottom, @pos-top: 0%, @pos-bottom: 100%) {
    background-repeat: repeat-x;
    background-position: left bottom;
    background-image: linear-gradient(to bottom, @color-top @pos-top, @color-bottom @pos-bottom);
    background-color: @color-top;
}

// Verlauf Main
.gradient-main() {
    .gradient-vertical(
        @app-color-main,
        darken(@app-color-main, @app-darken-main)
    );
}

// Verlauf Erfolg
.gradient-success() {
    .gradient-vertical(
        @app-color-success,
        darken(@app-color-success, @app-darken-success)
    );
}

// Verlauf Hintergrund
.gradient-background() {
    .gradient-vertical(
        @app-color-white,
        lighten(@app-color-background, @app-darken-background)
    );
}

// Verlauf Hintergrund Umgekehrt
.gradient-background-reverse() {
    .gradient-vertical(
        lighten(@app-color-background, @app-darken-background),
        @app-color-white
    );
}

// Animation
.animation(@animation, @time: @app-time-animation) {
    animation: @animation @time normal forwards;
}